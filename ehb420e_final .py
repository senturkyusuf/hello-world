# -*- coding: utf-8 -*-
"""ehb420e_final.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1e9wTHT9kc2a-Dw6TfVkAw1FadeSu9UFA
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score

# Importing data
file_path = "data.xlsx"
data = pd.read_excel(file_path)

# Features (X) ve labels (y)
X = data[['x', 'y']]
y = data['coin']

# Train and test datasets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Implementing and training
model = DecisionTreeClassifier()
model.fit(X_train, y_train)

# Model accuracy
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print("Model Accuracy:", accuracy)

new_x_value = float(input("Enter x coordinat of coin's position(cm): "))
new_x_value*=0.01
new_y_value = float(input("Enter y coordinat of coin's position(cm): "))
new_y_value*=0.01

# Prediction with new input
new_input = pd.DataFrame({'x': [new_x_value], 'y': [new_y_value]})
prediction = model.predict(new_input)
if prediction[0]==1:
  result="Tail"
else:
  result="Heads"
print("Prediction:", result)